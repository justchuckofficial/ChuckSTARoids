name: Build and Release All Platforms

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-all:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            platform: Windows
            artifact: ChuckSTARoids-Windows
            file: ChuckSTARoids_v5.exe
          - os: macos-latest
            platform: macOS
            artifact: ChuckSTARoids-macOS
            file: ChuckSTARoids_v5.app
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pygame numpy pyinstaller requests psutil mido pillow
        
    - name: Verify game assets
      run: |
        echo "Checking for required game assets..."
        if [ -f "chuckstaroidsv5.py" ]; then echo "‚úÖ Main game file found"; else echo "‚ùå chuckstaroidsv5.py missing"; exit 1; fi
        if [ -f "music.py" ]; then echo "‚úÖ Music module found"; else echo "‚ùå music.py missing"; exit 1; fi
        if [ -f "xwing.ico" ]; then echo "‚úÖ Icon file found"; else echo "‚ùå xwing.ico missing"; exit 1; fi
        
    - name: Build Windows executable
      if: matrix.os == 'windows-latest'
      run: |
        echo "Building Windows executable..."
        python -m PyInstaller chuckstaroidsv5.spec
        
    - name: Build macOS app
      if: matrix.os == 'macos-latest'
      run: |
        echo "Converting icon for macOS..."
        if [ -f "xwing.ico" ]; then
          python create_mac_icon.py xwing.ico xwing.icns
        fi
        
        if [ ! -f "xwing.icns" ]; then
          echo "Creating placeholder icon..."
          python -c "
from PIL import Image
import os
img = Image.new('RGBA', (512, 512), (0, 0, 0, 0))
img.save('xwing.icns')
"
        fi
        
        echo "Building macOS app..."
        python -m PyInstaller chuckstaroidsv5_mac.spec
        
    - name: Test build
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          if [ -f "dist/ChuckSTARoids_v5.exe" ]; then
            echo "‚úÖ Windows executable created successfully!"
            echo "File size: $(stat -c%s 'dist/ChuckSTARoids_v5.exe') bytes"
          else
            echo "‚ùå Windows executable creation failed"
            exit 1
          fi
        else
          if [ -d "dist/ChuckSTARoids_v5.app" ]; then
            echo "‚úÖ macOS app created successfully!"
            echo "App size: $(du -sh 'dist/ChuckSTARoids_v5.app' | cut -f1)"
          else
            echo "‚ùå macOS app creation failed"
            exit 1
          fi
        fi
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact }}
        path: dist/${{ matrix.file }}
        retention-days: 30

  create-release:
    needs: build-all
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Windows build
      uses: actions/download-artifact@v3
      with:
        name: ChuckSTARoids-Windows
        path: ./releases/
        
    - name: Download macOS build
      uses: actions/download-artifact@v3
      with:
        name: ChuckSTARoids-macOS
        path: ./releases/
        
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./releases/ChuckSTARoids_v5.exe
          ./releases/ChuckSTARoids_v5.app
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## üéÆ ChuckSTARoids v5 Release
          
          ### Downloads
          - **Windows**: `ChuckSTARoids_v5.exe` - Double-click to run
          - **macOS**: `ChuckSTARoids_v5.app` - Drag to Applications folder
          
          ### Features
          - Complete standalone game (no dependencies required)
          - All assets embedded
          - Enhanced music system
          - Professional packaging
          
          ### Installation
          - **Windows**: Download and run the .exe file
          - **macOS**: Download, right-click the .app, select "Open", then drag to Applications
          
          ### System Requirements
          - **Windows**: Windows 10 or later
          - **macOS**: macOS 10.13 (High Sierra) or later
